<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- securityManager 必须配置-->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置我们的登录请求地址 -->
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/static/error/403.jsp"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="myFormAuthenticationFilter"/>
                <!--<entry key="kickout" value-ref="kickoutSessionControlFilter"/>-->
            </map>
        </property>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问,authc表示只有通过表单登录的用户才能访问/下的资源 -->
                /static/**=anon
                /login=authc
                /login_out=logout
                /**=user
            </value>
        </property>
    </bean>
    <!-- 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- ref对应我们写的realm  MyShiro -->
        <property name="realms">
            <list>
                <ref bean="myRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!--设置 SecurityManager 的 cacheManager，会自动设置实现了CacheManagerAware 接口的相应对象，如 SessionDAO 的 cacheManager-->
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <bean id="myRealm" class="org.dongchao.web.security.MyRealm">
        <property name="cachingEnabled" value="false"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!--自定义登录验证过滤器-->
    <bean id="myFormAuthenticationFilter" class="org.dongchao.web.security.filter.MyFormAuthenticationFilter">
        <property name="defaultSuccessUrl" value="/"/>
    </bean>
    <!-- 会话 Cookie 模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="s_id"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30 天 -->
    </bean>
    <!-- Session管理器-->
    <!--Shiro 提供了三个默认实现：
            DefaultSessionManager: DefaultSecurityManager 使用的默认实现，用于 JavaSE 环境；
            ServletContainerSessionManager : DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用 Servlet 容器的会话；
            DefaultWebSessionManager ： 用于Web环境的实现,可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了 Servlet 容器的会话管理。
    -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <property name="globalSessionTimeout" value="180000"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionListeners">
            <list>
                <bean class="org.dongchao.web.security.MySessionListener"/>
            </list>
        </property>
    </bean>
    <!--session缓存 -->
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache/shiro-ehcache.xml"/>
    </bean>
    <!-- rememberMe 管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>
    <bean id="kickoutSessionControlFilter"
          class="org.dongchao.web.security.KickoutSessionControlFilter">
        <property name="cache" ref="ehCacheManager"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="kickoutAfter" value="true"/>
        <property name="maxSession" value="1"/>
        <property name="kickoutUrl" value="/login?kickout=1"/>
    </bean>

    <!-- 会话 ID 生成器 -->
    <bean id="sessionIdGenerator"
          class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <bean id="redisManager" class="org.dongchao.web.security.redis.JedisManager">
        <property name="jedisPool" ref="jedisPool"/>
    </bean>
    <!-- 会话 DAO -->
    <bean id="sessionDAO" class="org.dongchao.web.security.MySessionDao">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
        <property name="redisManager" ref="redisManager"/>
    </bean>
    <!-- 相当于调用 SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
</beans>